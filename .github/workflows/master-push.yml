name: Publish Master

on:
  push:
    branches:
      - master

jobs:
  example:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Workflow run cleanup action
        uses: rokroskar/workflow-run-cleanup-action@v0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get current time
        uses: 1466587594/get-current-time@v1
        id: current-time
        with:
          format: DDMMHm
          utcOffset: "+03:00"
      - name: Set up kubectl
        uses: matootie/dokube@v1.3.4
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          clusterName: pankod-k8s
          expirationTime: 1200
      - name: Get nodes
        run: kubectl get nodes
      - name: web docker build
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: docker.pkg.github.com
          repository: pankod/refine/refine-example
          tags: sha-${{ steps.current-time.outputs.formattedTime }}
      - name: Deploy refine-example to k8s
        run: |
          cd examples/fineFoods
          echo ${{ env.domain }}
          mv ./k8s/refine-example/Chart.yaml ./k8s/refine-example/Chart.old.yaml &&
          cat ./k8s/refine-example/Chart.old.yaml | grep -v appVersion > ./k8s/refine-example/Chart.yaml &&
          echo -e "\r\nappVersion: sha-${{ steps.current-time.outputs.formattedTime }}\r\n" >> ./k8s/refine-example/Chart.yaml &&
          cat ./k8s/refine-example/Chart.yaml
          helm upgrade refine-example ./k8s/refine-example --install --values=./k8s/refine-example/values.yaml \
            --set ingress.enabled=true \
            --set ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
            --set ingress.annotations."cert-manager\.io/issuer"=letsencrypt-prod \
            --set ingress.hosts[0].host=${{ env.domain }} \
            --set ingress.hosts[0].paths[0]="/" \
            --set ingress.tls[0].secretName=${{ env.domain }} \
            --set ingress.tls[0].hosts[0]=${{ env.domain }} \
        env:
          domain: 'example.refine.dev'
      - name: Send custom variable to Meercode Build
        uses: meercodeio/meercode-custom-variable@0.1.0
        with:
          meercode-token: ${{ secrets.MEERCODE_TOKEN }}
          url: 'https://example.refine.dev'
  documentation:
    runs-on: ubuntu-latest
    if: 1 == 0

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Workflow run cleanup action
        uses: rokroskar/workflow-run-cleanup-action@v0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get current time
        uses: 1466587594/get-current-time@v1
        id: current-time
        with:
          format: DDMMHm
          utcOffset: "+03:00"
      - name: Set up kubectl
        uses: matootie/dokube@v1.3.4
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          clusterName: pankod-k8s
          expirationTime: 1200
      - name: Get nodes
        run: kubectl get nodes
      - name: web docker build
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: docker.pkg.github.com
          repository: pankod/refine/refine-documentation
          path: documentation
          tags: sha-${{ steps.current-time.outputs.formattedTime }}
      - name: Deploy refine-documentation to k8s
        run: |
          cd documentation
          echo ${{ env.domain }}
          mv ./k8s/refine-documentation/Chart.yaml ./k8s/refine-documentation/Chart.old.yaml &&
          cat ./k8s/refine-documentation/Chart.old.yaml | grep -v appVersion > ./k8s/refine-documentation/Chart.yaml &&
          echo -e "\r\nappVersion: sha-${{ steps.current-time.outputs.formattedTime }}\r\n" >> ./k8s/refine-documentation/Chart.yaml &&
          cat ./k8s/refine-documentation/Chart.yaml
          helm upgrade refine-documentation ./k8s/refine-documentation --install --values=./k8s/refine-documentation/values.yaml \
            --set ingress.enabled=true \
            --set ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
            --set ingress.annotations."cert-manager\.io/issuer"=letsencrypt-prod \
            --set ingress.hosts[0].host=${{ env.domain }} \
            --set ingress.hosts[0].paths[0].path="/" \
            --set ingress.tls[0].secretName=${{ env.domain }} \
            --set ingress.tls[0].hosts[0]=${{ env.domain }} \
        env:
          domain: 'refine.dev'
  documentation-gh:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Add key to allow access to repository
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "${{ secrets.GH_PAGES_DEPLOY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat <<EOT >> ~/.ssh/config
          Host github.com
          HostName github.com
          IdentityFile ~/.ssh/id_rsa
          EOT
      - name: Release to GitHub Pages
        env:
          USE_SSH: true
          GIT_USER: pankod-bot
        run: |
          cd documentation
          git config --global user.email "bot@pankod.com"
          git config --global user.name "pankod-bot"
          npm install
          npm run deploy